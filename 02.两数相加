解题思路：
按位相加并考虑进位
减少内存消耗的思路就是尽量使用题目所给的内存。
详情见注释
如果有好的建议，欢迎交流学习^^
/**
cpp
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution
{
public:
    ListNode *addTwoNumbers(ListNode *l1, ListNode *l2)
    {
        ListNode *ans = l1;//保存l1的head作为结果,l1作为答案的行进指针
        int jingwei = 0;//初始化进位值为0

        while (1)
        {
            int temp = jingwei + l1->val + l2->val;//按位相加
            l1->val = temp % 10;//更新答案
            jingwei = temp / 10;//更新进位值
            if (!l1->next || !l2->next)//判断溢出情况
                break;
            l1 = l1->next;//前进加重复
            l2 = l2->next;
        }

        if (l2->next)//如果l2还有剩余的位数将其转移到l1
        {
            l1->next = l2->next;
        }
        
        while (l1 && l1->next)//继续执行
        {
            l1 = l1->next;
            int temp = jingwei + l1->val;
            l1->val = temp % 10;
            jingwei = temp / 10;
        }
        
        if (jingwei)//如果最高位有进位，就添上。
        {
            l1->next = new ListNode(jingwei);
        }

        return ans;
    }
};
